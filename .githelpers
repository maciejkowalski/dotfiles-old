#!/bin/bash

# Log output:
#
# * 51c333e (12 days) <Gary Bernhardt> add vim-eunuch
#
# The time massaging regexes start with ^[^<]* because that ensures that they
# only operate before the first "<". That "<" will be the beginning of the
# author name, ensuring that we don't destroy anything in the commit message
# that looks like time.
#
# The log format uses } characters between each field, and `column` is later
# used to split on them. A } in the commit subject or any other field will
# break this.

HASH="%C(yellow)%h%Creset"
FULLHASH="%C(yellow)%H%Creset"
RELATIVE_TIME="%Cgreen(%ad)%Creset"
AUTHOR="%C(bold blue)<%an>%Creset"
REFS="%C(red)%d%Creset"
SUBJECT="%s"

FORMAT="$HASH}$RELATIVE_TIME}$AUTHOR}$REFS $SUBJECT"
LONGFORMAT="$FULLHASH}$RELATIVE_TIME}$AUTHOR}$REFS $SUBJECT"

show_git_head() {
    pretty_git_log -1
    git show -p --pretty="tformat:"
}

pretty_git_log_full() {
    git log --graph --pretty="tformat:${LONGFORMAT}" $* |
        # Line columns up based on } delimiter
        column -s '}' -t |
        # Page only if we need to
        less -FXRS
}

pretty_git_log_medium() {
    git log --graph --abbrev-commit --pretty="tformat:${FORMAT}" $* |
        column -s '}' -t |
        less -FXRS
}

pretty_git_log_short() {
    git log --graph --abbrev-commit --date=relative --pretty="tformat:${FORMAT}" $* |
        column -s '}' -t |
        less -FXRS
}

